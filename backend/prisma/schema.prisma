// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  nome      String
  email     String   @unique
  senha     String
  casas     Casa[]   // Um usuário pode ter várias casas
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Session {
  sid       String    @id @map("sid") // session ID
  sess      Json      @map("sess")    // session data (json)
  expire    DateTime  @map("expire")  // expiration date

  @@map("session") // Nome da tabela no banco de dados
}

model Casa {
  id             Int          @id @default(autoincrement())
  titulo         String
  cidade         String
  bairro         String
  rua            String
  numero         String?
  tipoImovel     String
  comodos        Int
  quartos        Int
  banheiros      Int
  vagasGaragem   Int?
  tamanhoM2      Float
  descricao      String
  preco          Float
  tipoPreco      String
  fotos          ImovelFoto[]
  userId         Int          // Chave estrangeira obrigatória
  user           User         @relation(fields: [userId], references: [id])
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
}

model ImovelFoto {
  id          Int      @id @default(autoincrement())
  casaId      Int
  caminho     String
  ordem       Int?
  descricao   String?
  casa        Casa     @relation(fields: [casaId], references: [id])
}